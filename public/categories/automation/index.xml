<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation on Marvin Murithi</title>
    <link>http://localhost:1313/categories/automation/</link>
    <description>Recent content in Automation on Marvin Murithi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/categories/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configuration Management</title>
      <link>http://localhost:1313/portfolio/configuration-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portfolio/configuration-management/</guid>
      <description>Configuration Management Managed configurations and ensured consistency across environments using configuration management tools.&#xA;Utilized Ansible, Chef, and Puppet for Configuration Management Ansible Playbooks for Server Setup: Developed Ansible playbooks to automate server provisioning, configuration, and application deployment, reducing manual intervention and minimizing errors. Chef Recipes for Application Deployment: Created Chef recipes to manage complex application deployments, ensuring consistency and repeatability across different environments. Puppet Manifests for Infrastructure Configuration: Implemented Puppet manifests to enforce infrastructure configurations, maintaining desired states across all managed nodes.</description>
    </item>
    <item>
      <title>Continuous Integration/Continuous Deployment (CI/CD) Pipelines</title>
      <link>http://localhost:1313/portfolio/continuous-integration/continuous-deployment-ci/cd-pipelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portfolio/continuous-integration/continuous-deployment-ci/cd-pipelines/</guid>
      <description>Continuous Integration/Continuous Deployment (CI/CD) Pipelines Developed and maintained robust CI/CD pipelines to streamline the software development process, reduce deployment times, and improve release quality.&#xA;Built CI/CD Pipelines using Jenkins, GitLab CI/CD, and GitHub Actions Jenkins Pipeline for Microservices: Created Jenkins pipelines to build, test, and deploy microservices architecture efficiently. GitLab CI/CD for Kubernetes Deployments: Leveraged GitLab CI/CD to automate deployments to Kubernetes clusters, enhancing scalability and reliability. GitHub Actions for Serverless Deployments: Implemented GitHub Actions workflows to deploy serverless applications seamlessly.</description>
    </item>
  </channel>
</rss>
